{
  "openapi": "3.0.2",
  "paths": {
    "/api/v1/health": {
      "get": {
        "description": "Check API health status and get version information. This endpoint does not require authentication.",
        "summary": "Health check",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "root",
        "responses": {
          "200": {
            "description": "Health check response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Health check response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "API status",
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    },
                    "timestamp": {
                      "description": "Current server timestamp"
                    },
                    "version": {
                      "description": "API version number",
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "timestamp",
                    "version"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents": {
      "get": {
        "description": "Retrieve a paginated list of all documents in your organization.\n\nDocuments can be filtered and sorted. The response includes basic document information and metadata. Use the 'getDocument' endpoint to retrieve full document details including signers.\n\n**Pagination:** Use 'page' and 'perPage' query parameters to control pagination.",
        "summary": "List all documents",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (default: 1)",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page (default: 10, max: 100)",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 10,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "operationId": "getDocuments",
        "responses": {
          "200": {
            "description": "Paginated list of documents",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Paginated list of documents",
                  "type": "object",
                  "properties": {
                    "documents": {
                      "description": "Array of documents",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique document identifier",
                            "type": "string"
                          },
                          "externalId": {
                            "description": "Your external reference ID for this document",
                            "type": "string",
                            "nullable": true
                          },
                          "expiresAt": {
                            "description": "Date and time when the document expires",
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "description": "Document name/title",
                            "type": "string"
                          },
                          "status": {
                            "description": "Document status: DRAFT, SENDING, PENDING, COMPLETED, EXPIRED, CANCELLED, or IMPORTED",
                            "type": "string"
                          },
                          "documentMeta": {
                            "description": "Document metadata including subject, message, signing order, etc.",
                            "type": "object",
                            "properties": {
                              "subject": {
                                "description": "Email subject line when sending document",
                                "type": "string",
                                "nullable": true
                              },
                              "message": {
                                "description": "Custom message included in signing invitation",
                                "type": "string",
                                "nullable": true
                              },
                              "signingOrder": {
                                "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                                "type": "string",
                                "enum": [
                                  "PARALLEL",
                                  "SEQUENTIAL"
                                ],
                                "nullable": true
                              },
                              "defaultSignatureType": {
                                "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                                "type": "string",
                                "enum": [
                                  "DRAWING",
                                  "BANKID",
                                  "MANUAL"
                                ],
                                "nullable": true
                              },
                              "distributionMethod": {
                                "description": "How to send the document: EMAIL, SMS, or NONE (use signing URLs directly)",
                                "type": "string",
                                "enum": [
                                  "EMAIL",
                                  "SMS",
                                  "NONE"
                                ],
                                "nullable": true
                              },
                              "forceReadFullDocument": {
                                "description": "Whether signers must read the entire document before signing",
                                "type": "boolean",
                                "nullable": true
                              },
                              "showChatToSigners": {
                                "description": "Whether to show document chat to signers",
                                "type": "boolean",
                                "nullable": true
                              },
                              "preferredLanguage": {
                                "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                                "type": "string",
                                "enum": [
                                  "sv",
                                  "en"
                                ],
                                "nullable": true
                              },
                              "value": {
                                "description": "Monetary value of the document (for contracts)",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false,
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "Date and time when the document was created"
                          },
                          "updatedAt": {
                            "description": "Date and time when the document was last updated"
                          },
                          "completedAt": {
                            "description": "Date and time when all signers completed signing",
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "status",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalPages": {
                      "description": "Total number of pages available",
                      "type": "number"
                    }
                  },
                  "required": [
                    "documents",
                    "totalPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new document in DRAFT status. You can optionally include signers, metadata, and responsible user during creation.\n\n**Document Types:**\n- `SIGNABLE` (default) - Standard signing document\n- `ACCEPTABLE` - Document that requires acceptance rather than signature\n- `ARCHIVE_IMPORTED` - Imported from external archive\n\n**Template Support:** Use `templateId` to create a document from a template. Template fields will be automatically copied.\n\n**Responsible User:** Use `responsibleUserId` to assign a specific team member as responsible for the document. Defaults to the creating user if not specified.\n\n**Adding Signers:** Two approaches are supported:\n1. **Contact-based** (recommended): Provide `contactId` to reference existing contacts - automatically inherits all contact details\n2. **Manual**: Provide `name` and `email` to manually specify signer details\n\n**Signer Examples:**\n```json\n{\n  \"signers\": [\n    {\n      \"contactId\": \"contact-123\",\n      \"role\": \"SIGNER\",\n      \"signingOrder\": 1\n    },\n    {\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\",\n      \"role\": \"SIGNER\",\n      \"signingOrder\": 2\n    }\n  ]\n}\n```\n\n**Complete Workflow with Templates:**\n\n1. **Create template** (manually in dashboard) with FORM fields containing keys (e.g., \"name\", \"phone\", \"email\")\n2. **Create document from template** (this endpoint) - optionally include signers and `documentMeta.defaultSignatureType` during creation\n3. **Fill form fields** using key-based updates: `PATCH /api/v1/documents/{docId}/fields/key:name`\n4. **Add more signers** if needed: `POST /api/v1/documents/{docId}/signers`\n5. **Send for signing**: `POST /api/v1/documents/{docId}/send`\n\n**Note:** You can set the signature type either during document creation (via `documentMeta.defaultSignatureType`) or later via the update endpoint.\n\n**Example workflow:**\n```json\n# Step 1: Create document from template with signers\nPOST /api/v1/documents\n{\n  \"name\": \"Employment Contract\",\n  \"templateId\": \"template-id-with-form-fields\",\n  \"documentMeta\": {\n    \"defaultSignatureType\": \"BANKID\"\n  },\n  \"signers\": [\n    {\n      \"type\": \"contact\",\n      \"contactId\": \"contact-456\",\n      \"role\": \"SIGNER\"\n    }\n  ]\n}\n\n# Step 2: Fill form fields using keys\nPATCH /api/v1/documents/{docId}/fields/key:name\n{\n  \"fieldMeta\": {\"type\": \"input\", \"value\": \"Andreas\"}\n}\n\nPATCH /api/v1/documents/{docId}/fields/key:phone\n{\n  \"fieldMeta\": {\"type\": \"input\", \"value\": \"0767767712\"}\n}\n\n# Step 3: Send for signing\nPOST /api/v1/documents/{docId}/send\n{\n  \"deliveryMethod\": \"EMAIL\"\n}\n```\n\n**Response:** Returns the created document ID, signer IDs, tokens, and signing URLs for all added signers.",
        "summary": "Create a new document",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createDocument",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Document name/title",
                    "type": "string",
                    "minLength": 1
                  },
                  "externalId": {
                    "description": "Your external reference ID for tracking this document",
                    "type": "string",
                    "nullable": true
                  },
                  "expiresAt": {
                    "description": "Expiration date for the document",
                    "type": "string",
                    "nullable": true
                  },
                  "type": {
                    "description": "Document type: SIGNABLE (default), ACCEPTABLE, or ARCHIVE_IMPORTED",
                    "type": "string",
                    "enum": [
                      "SIGNABLE",
                      "ACCEPTABLE",
                      "ARCHIVE_IMPORTED"
                    ]
                  },
                  "templateId": {
                    "description": "Template ID to create document from. Template fields will be copied to the document.",
                    "type": "string",
                    "nullable": true
                  },
                  "responsibleUserId": {
                    "description": "User ID of the person responsible for this document. Must be a member of your organization.",
                    "type": "string",
                    "nullable": true
                  },
                  "documentMeta": {
                    "description": "Document metadata including subject, message, signing order, signature type, etc.",
                    "type": "object",
                    "properties": {
                      "subject": {
                        "description": "Email subject line when sending document",
                        "type": "string"
                      },
                      "message": {
                        "description": "Custom message included in signing invitation",
                        "type": "string"
                      },
                      "signingOrder": {
                        "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                        "type": "string",
                        "enum": [
                          "PARALLEL",
                          "SEQUENTIAL"
                        ]
                      },
                      "defaultSignatureType": {
                        "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                        "type": "string",
                        "enum": [
                          "DRAWING",
                          "BANKID",
                          "MANUAL"
                        ]
                      },
                      "distributionMethod": {
                        "description": "How to send the document: EMAIL, SMS, or NONE",
                        "type": "string",
                        "enum": [
                          "EMAIL",
                          "SMS",
                          "NONE"
                        ]
                      },
                      "forceReadFullDocument": {
                        "description": "Whether signers must read the entire document before signing",
                        "type": "boolean"
                      },
                      "showChatToSigners": {
                        "description": "Whether to show document chat to signers",
                        "type": "boolean"
                      },
                      "preferredLanguage": {
                        "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                        "type": "string",
                        "enum": [
                          "sv",
                          "en"
                        ]
                      },
                      "value": {
                        "description": "Monetary value of the document (for contracts)",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "documentStyle": {
                    "description": "Document styling configuration including orientation, padding, and background color",
                    "type": "object",
                    "properties": {
                      "orientation": {
                        "description": "Document orientation: PORTRAIT (default, 816x1054px) or LANDSCAPE (1054x816px)",
                        "type": "string",
                        "enum": [
                          "PORTRAIT",
                          "LANDSCAPE"
                        ]
                      },
                      "paddingEnabled": {
                        "description": "Whether to show padding around document content. When false, content fills entire page edge-to-edge (default: true)",
                        "type": "boolean"
                      },
                      "backgroundColor": {
                        "description": "Background color for the document in hex format (e.g., #ffffff for white, #000000 for black). Default: #ffffff",
                        "type": "string",
                        "pattern": "^#[0-9A-Fa-f]{6}$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "signers": {
                    "description": "Array of signers to add to the document during creation. Provide either contactId to reference existing contacts, or name and email to manually specify signer details.",
                    "default": [],
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "contactId": {
                              "description": "ID of existing contact to add as signer",
                              "type": "string",
                              "minLength": 1
                            },
                            "role": {
                              "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                              "default": "SIGNER",
                              "type": "string",
                              "enum": [
                                "SIGNER",
                                "ORGANIZER",
                                "REVIEWER",
                                "ACCEPTOR"
                              ]
                            },
                            "signingOrder": {
                              "description": "Order for sequential signing (1, 2, 3, etc.). Ignored for parallel signing.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "contactId",
                            "role"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Signer full name",
                              "type": "string",
                              "minLength": 1
                            },
                            "email": {
                              "description": "Signer email address",
                              "type": "string",
                              "minLength": 1,
                              "format": "email",
                              "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                            },
                            "role": {
                              "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                              "default": "SIGNER",
                              "type": "string",
                              "enum": [
                                "SIGNER",
                                "ORGANIZER",
                                "REVIEWER",
                                "ACCEPTOR"
                              ]
                            },
                            "signingOrder": {
                              "description": "Order for sequential signing (1, 2, 3, etc.). Ignored for parallel signing.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "name",
                            "email",
                            "role"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "customFields": {
                    "description": "Custom field values for the document",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customInputId": {
                          "type": "string",
                          "minLength": 1
                        },
                        "value": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "customInputId",
                        "value"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "name",
                  "signers"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "description": "Unique identifier for the created document",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "Your external reference ID",
                      "type": "string",
                      "nullable": true
                    },
                    "expiresAt": {
                      "description": "Document expiration date",
                      "type": "string",
                      "nullable": true
                    },
                    "signers": {
                      "description": "Array of created signers with their signing URLs and tokens",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "signerId": {
                            "description": "Unique identifier for this signer",
                            "type": "string"
                          },
                          "name": {
                            "description": "Signer full name",
                            "type": "string"
                          },
                          "email": {
                            "description": "Signer email address",
                            "type": "string",
                            "format": "email",
                            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                            "nullable": true
                          },
                          "token": {
                            "description": "Unique signing token for this signer",
                            "type": "string"
                          },
                          "role": {
                            "description": "Signer role",
                            "type": "string",
                            "enum": [
                              "SIGNER",
                              "ORGANIZER",
                              "REVIEWER",
                              "ACCEPTOR"
                            ]
                          },
                          "signingOrder": {
                            "description": "Signing order (for sequential signing)",
                            "type": "number",
                            "nullable": true
                          },
                          "signingUrl": {
                            "description": "Complete signing URL for this signer",
                            "type": "string"
                          }
                        },
                        "required": [
                          "signerId",
                          "name",
                          "token",
                          "role",
                          "signingUrl"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "documentId",
                    "signers"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}": {
      "get": {
        "description": "Retrieve detailed information about a specific document including all signers, tags, and custom field values.\n\nThe response includes:\n- Document metadata (subject, message, signing order, etc.)\n- All document signers with their status\n- Applied tags\n- Custom field values\n- Document timestamps (created, updated, completed, archived)",
        "summary": "Get a document by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getDocument",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique document identifier",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "Your external reference ID for this document",
                      "type": "string",
                      "nullable": true
                    },
                    "expiresAt": {
                      "description": "Date and time when the document expires",
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "description": "Document name/title",
                      "type": "string"
                    },
                    "status": {
                      "description": "Document status: DRAFT, SENDING, PENDING, COMPLETED, EXPIRED, CANCELLED, or IMPORTED",
                      "type": "string"
                    },
                    "documentMeta": {
                      "description": "Document metadata including subject, message, signing order, etc.",
                      "type": "object",
                      "properties": {
                        "subject": {
                          "description": "Email subject line when sending document",
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "description": "Custom message included in signing invitation",
                          "type": "string",
                          "nullable": true
                        },
                        "signingOrder": {
                          "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                          "type": "string",
                          "enum": [
                            "PARALLEL",
                            "SEQUENTIAL"
                          ],
                          "nullable": true
                        },
                        "defaultSignatureType": {
                          "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                          "type": "string",
                          "enum": [
                            "DRAWING",
                            "BANKID",
                            "MANUAL"
                          ],
                          "nullable": true
                        },
                        "distributionMethod": {
                          "description": "How to send the document: EMAIL, SMS, or NONE (use signing URLs directly)",
                          "type": "string",
                          "enum": [
                            "EMAIL",
                            "SMS",
                            "NONE"
                          ],
                          "nullable": true
                        },
                        "forceReadFullDocument": {
                          "description": "Whether signers must read the entire document before signing",
                          "type": "boolean",
                          "nullable": true
                        },
                        "showChatToSigners": {
                          "description": "Whether to show document chat to signers",
                          "type": "boolean",
                          "nullable": true
                        },
                        "preferredLanguage": {
                          "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                          "type": "string",
                          "enum": [
                            "sv",
                            "en"
                          ],
                          "nullable": true
                        },
                        "value": {
                          "description": "Monetary value of the document (for contracts)",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when the document was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when the document was last updated"
                    },
                    "completedAt": {
                      "description": "Date and time when all signers completed signing",
                      "type": "string",
                      "nullable": true
                    },
                    "signers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique signer identifier",
                            "type": "string"
                          },
                          "documentId": {
                            "description": "Document ID this signer belongs to",
                            "type": "string"
                          },
                          "email": {
                            "description": "Signer email address",
                            "type": "string",
                            "format": "email",
                            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                            "nullable": true
                          },
                          "name": {
                            "description": "Signer full name",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Signer phone number (for SMS notifications)",
                            "type": "string",
                            "nullable": true
                          },
                          "companyName": {
                            "description": "Company name",
                            "type": "string",
                            "nullable": true
                          },
                          "companyRole": {
                            "description": "Role/title within the company",
                            "type": "string",
                            "nullable": true
                          },
                          "companyOrgNumber": {
                            "description": "Company organization number",
                            "type": "string",
                            "nullable": true
                          },
                          "externalId": {
                            "description": "Your external reference ID for this signer",
                            "type": "string",
                            "nullable": true
                          },
                          "companyId": {
                            "description": "Linked company ID",
                            "type": "string",
                            "nullable": true
                          },
                          "ssn": {
                            "description": "Swedish personal number (personnummer) - required for BankID signing",
                            "type": "string",
                            "nullable": true
                          },
                          "role": {
                            "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                            "type": "string",
                            "enum": [
                              "SIGNER",
                              "ORGANIZER",
                              "REVIEWER",
                              "ACCEPTOR"
                            ]
                          },
                          "signingOrder": {
                            "description": "Order for sequential signing (null for parallel)",
                            "type": "number",
                            "nullable": true
                          },
                          "token": {
                            "description": "Unique signing token",
                            "type": "string"
                          },
                          "signedAt": {
                            "description": "Date and time when the signer signed (null if not signed)",
                            "type": "string",
                            "nullable": true
                          },
                          "readStatus": {
                            "description": "Read status: NOT_OPENED, OPENED, or READ",
                            "type": "string",
                            "enum": [
                              "NOT_OPENED",
                              "OPENED",
                              "READ"
                            ]
                          },
                          "signingStatus": {
                            "description": "Signing status: NOT_SIGNED, SIGNED, or REJECTED",
                            "type": "string",
                            "enum": [
                              "NOT_SIGNED",
                              "SIGNED",
                              "REJECTED"
                            ]
                          },
                          "signingUrl": {
                            "description": "Complete signing URL for this signer",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "role",
                          "token",
                          "signedAt",
                          "readStatus",
                          "signingStatus",
                          "signingUrl"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "color": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "color"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "TEXT",
                              "NUMBER",
                              "DATE",
                              "EMAIL",
                              "PHONE",
                              "URL",
                              "BOOLEAN",
                              "SELECT",
                              "JSON",
                              "TEXTAREA"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt",
                    "signers"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update document properties. Only DRAFT documents can have all fields updated. Sent documents have restrictions.\n\n**Updatable Fields:**\n- `name` - Document title\n- `externalId` - Your external reference ID\n- `expiresAt` - Document expiration date\n- `responsibleUserId` - User ID of responsible team member (must be in your organization)\n- `documentMeta` - Metadata including subject, message, signing order, distribution method, signature type, etc.\n- `customFields` - Custom field values\n\n**Note:** Some fields like signing order cannot be modified after the document is sent.",
        "summary": "Update a document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateDocument",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "expiresAt": {},
                  "responsibleUserId": {
                    "description": "User ID of the person responsible for this document. Must be a member of your organization.",
                    "type": "string"
                  },
                  "documentMeta": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "signingOrder": {
                        "type": "string",
                        "enum": [
                          "PARALLEL",
                          "SEQUENTIAL"
                        ]
                      },
                      "defaultSignatureType": {
                        "type": "string",
                        "enum": [
                          "DRAWING",
                          "BANKID",
                          "MANUAL"
                        ]
                      },
                      "distributionMethod": {
                        "type": "string",
                        "enum": [
                          "EMAIL",
                          "SMS",
                          "NONE"
                        ]
                      },
                      "forceReadFullDocument": {
                        "type": "boolean"
                      },
                      "showChatToSigners": {
                        "type": "boolean"
                      },
                      "preferredLanguage": {
                        "type": "string",
                        "enum": [
                          "sv",
                          "en"
                        ]
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "documentStyle": {
                    "description": "Document styling configuration including orientation, padding, and background color",
                    "type": "object",
                    "properties": {
                      "orientation": {
                        "description": "Document orientation: PORTRAIT (default, 816x1054px) or LANDSCAPE (1054x816px)",
                        "type": "string",
                        "enum": [
                          "PORTRAIT",
                          "LANDSCAPE"
                        ]
                      },
                      "paddingEnabled": {
                        "description": "Whether to show padding around document content. When false, content fills entire page edge-to-edge (default: true)",
                        "type": "boolean"
                      },
                      "backgroundColor": {
                        "description": "Background color for the document in hex format (e.g., #ffffff for white, #000000 for black). Default: #ffffff",
                        "type": "string",
                        "pattern": "^#[0-9A-Fa-f]{6}$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customFields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customInputId": {
                          "type": "string",
                          "minLength": 1
                        },
                        "value": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "customInputId",
                        "value"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique document identifier",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "Your external reference ID for this document",
                      "type": "string",
                      "nullable": true
                    },
                    "expiresAt": {
                      "description": "Date and time when the document expires",
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "description": "Document name/title",
                      "type": "string"
                    },
                    "status": {
                      "description": "Document status: DRAFT, SENDING, PENDING, COMPLETED, EXPIRED, CANCELLED, or IMPORTED",
                      "type": "string"
                    },
                    "documentMeta": {
                      "description": "Document metadata including subject, message, signing order, etc.",
                      "type": "object",
                      "properties": {
                        "subject": {
                          "description": "Email subject line when sending document",
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "description": "Custom message included in signing invitation",
                          "type": "string",
                          "nullable": true
                        },
                        "signingOrder": {
                          "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                          "type": "string",
                          "enum": [
                            "PARALLEL",
                            "SEQUENTIAL"
                          ],
                          "nullable": true
                        },
                        "defaultSignatureType": {
                          "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                          "type": "string",
                          "enum": [
                            "DRAWING",
                            "BANKID",
                            "MANUAL"
                          ],
                          "nullable": true
                        },
                        "distributionMethod": {
                          "description": "How to send the document: EMAIL, SMS, or NONE (use signing URLs directly)",
                          "type": "string",
                          "enum": [
                            "EMAIL",
                            "SMS",
                            "NONE"
                          ],
                          "nullable": true
                        },
                        "forceReadFullDocument": {
                          "description": "Whether signers must read the entire document before signing",
                          "type": "boolean",
                          "nullable": true
                        },
                        "showChatToSigners": {
                          "description": "Whether to show document chat to signers",
                          "type": "boolean",
                          "nullable": true
                        },
                        "preferredLanguage": {
                          "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                          "type": "string",
                          "enum": [
                            "sv",
                            "en"
                          ],
                          "nullable": true
                        },
                        "value": {
                          "description": "Monetary value of the document (for contracts)",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when the document was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when the document was last updated"
                    },
                    "completedAt": {
                      "description": "Date and time when all signers completed signing",
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Soft delete a document. The document is marked as deleted but not permanently removed from the database.\n\n**Note:** Deleted documents are not included in list responses but can be retrieved by ID if you have the document ID.",
        "summary": "Delete a document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteDocument",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique document identifier",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "Your external reference ID for this document",
                      "type": "string",
                      "nullable": true
                    },
                    "expiresAt": {
                      "description": "Date and time when the document expires",
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "description": "Document name/title",
                      "type": "string"
                    },
                    "status": {
                      "description": "Document status: DRAFT, SENDING, PENDING, COMPLETED, EXPIRED, CANCELLED, or IMPORTED",
                      "type": "string"
                    },
                    "documentMeta": {
                      "description": "Document metadata including subject, message, signing order, etc.",
                      "type": "object",
                      "properties": {
                        "subject": {
                          "description": "Email subject line when sending document",
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "description": "Custom message included in signing invitation",
                          "type": "string",
                          "nullable": true
                        },
                        "signingOrder": {
                          "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                          "type": "string",
                          "enum": [
                            "PARALLEL",
                            "SEQUENTIAL"
                          ],
                          "nullable": true
                        },
                        "defaultSignatureType": {
                          "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                          "type": "string",
                          "enum": [
                            "DRAWING",
                            "BANKID",
                            "MANUAL"
                          ],
                          "nullable": true
                        },
                        "distributionMethod": {
                          "description": "How to send the document: EMAIL, SMS, or NONE (use signing URLs directly)",
                          "type": "string",
                          "enum": [
                            "EMAIL",
                            "SMS",
                            "NONE"
                          ],
                          "nullable": true
                        },
                        "forceReadFullDocument": {
                          "description": "Whether signers must read the entire document before signing",
                          "type": "boolean",
                          "nullable": true
                        },
                        "showChatToSigners": {
                          "description": "Whether to show document chat to signers",
                          "type": "boolean",
                          "nullable": true
                        },
                        "preferredLanguage": {
                          "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                          "type": "string",
                          "enum": [
                            "sv",
                            "en"
                          ],
                          "nullable": true
                        },
                        "value": {
                          "description": "Monetary value of the document (for contracts)",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when the document was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when the document was last updated"
                    },
                    "completedAt": {
                      "description": "Date and time when all signers completed signing",
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/download": {
      "get": {
        "description": "Get a download URL for a document.\n\n**Query Parameters:**\n- `downloadOriginalDocument` (boolean): If true, downloads the original unsigned document. If false (default), downloads the signed/sealed version.\n\n**Response:** Returns a pre-signed URL valid for 1 hour. The URL provides secure access to the document file.\n\n**Status Requirements:**\n- For signed documents: Document must be in COMPLETED status\n- For original documents: Available for all document statuses",
        "summary": "Download signed document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "downloadOriginalDocument",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "operationId": "downloadSignedDocument",
        "responses": {
          "200": {
            "description": "Document download response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Document download response",
                  "type": "object",
                  "properties": {
                    "downloadUrl": {
                      "description": "Pre-signed URL for downloading the document (valid for 1 hour)",
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "downloadUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/send": {
      "post": {
        "description": "Send a document to signers for signing. The document status will change from DRAFT to PENDING.\n\n**Delivery Methods:**\n- `EMAIL` - Send signing invitations via email\n- `SMS` - Send signing links via SMS (requires phone numbers)\n- `NONE` - Don't send notifications (use signing URLs directly)\n\n**Custom Message:** Optional custom message included in the invitation.\n\n**Signature Type:** The signature type is determined by the document's `documentMeta.defaultSignatureType` setting. Set this via the update document endpoint before sending:\n- `DRAWING` - Free-hand signature drawing (SES - Simple Electronic Signature)\n- `BANKID` - Swedish BankID electronic signature (AES - Advanced Electronic Signature)\n- `MANUAL` - Manual signature (for in-person signing)\n\n**Prerequisites:** Document must have at least one signer and a signature type configured before sending.",
        "summary": "Send document for signing",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "sendDocument",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Send document request",
                "type": "object",
                "properties": {
                  "deliveryMethod": {
                    "description": "How to send the document: EMAIL, SMS, or NONE",
                    "type": "string",
                    "enum": [
                      "EMAIL",
                      "SMS",
                      "NONE"
                    ]
                  },
                  "customMessage": {
                    "description": "Optional custom message to include in the signing invitation",
                    "type": "string"
                  }
                },
                "required": [
                  "deliveryMethod"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique document identifier",
                      "type": "string"
                    },
                    "externalId": {
                      "description": "Your external reference ID for this document",
                      "type": "string",
                      "nullable": true
                    },
                    "expiresAt": {
                      "description": "Date and time when the document expires",
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "description": "Document name/title",
                      "type": "string"
                    },
                    "status": {
                      "description": "Document status: DRAFT, SENDING, PENDING, COMPLETED, EXPIRED, CANCELLED, or IMPORTED",
                      "type": "string"
                    },
                    "documentMeta": {
                      "description": "Document metadata including subject, message, signing order, etc.",
                      "type": "object",
                      "properties": {
                        "subject": {
                          "description": "Email subject line when sending document",
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "description": "Custom message included in signing invitation",
                          "type": "string",
                          "nullable": true
                        },
                        "signingOrder": {
                          "description": "Signing order: PARALLEL (all signers can sign simultaneously) or SEQUENTIAL (signers must sign in order)",
                          "type": "string",
                          "enum": [
                            "PARALLEL",
                            "SEQUENTIAL"
                          ],
                          "nullable": true
                        },
                        "defaultSignatureType": {
                          "description": "Default signature type: DRAWING, BANKID, or MANUAL",
                          "type": "string",
                          "enum": [
                            "DRAWING",
                            "BANKID",
                            "MANUAL"
                          ],
                          "nullable": true
                        },
                        "distributionMethod": {
                          "description": "How to send the document: EMAIL, SMS, or NONE (use signing URLs directly)",
                          "type": "string",
                          "enum": [
                            "EMAIL",
                            "SMS",
                            "NONE"
                          ],
                          "nullable": true
                        },
                        "forceReadFullDocument": {
                          "description": "Whether signers must read the entire document before signing",
                          "type": "boolean",
                          "nullable": true
                        },
                        "showChatToSigners": {
                          "description": "Whether to show document chat to signers",
                          "type": "boolean",
                          "nullable": true
                        },
                        "preferredLanguage": {
                          "description": "Preferred language for the signing interface: sv (Swedish) or en (English)",
                          "type": "string",
                          "enum": [
                            "sv",
                            "en"
                          ],
                          "nullable": true
                        },
                        "value": {
                          "description": "Monetary value of the document (for contracts)",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when the document was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when the document was last updated"
                    },
                    "completedAt": {
                      "description": "Date and time when all signers completed signing",
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/signers": {
      "post": {
        "description": "Add a signer/participant to a document. The signer must reference an existing contact.\n\n**Signer Roles:**\n- `SIGNER` - Must sign the document\n- `ORGANIZER` - Document organizer (no signature required)\n- `REVIEWER` - Reviews document (no signature required)\n- `ACCEPTOR` - Accepts terms (for acceptance documents)\n\n**Signing Order:** For SEQUENTIAL signing, specify the order (1, 2, 3...). For PARALLEL signing, order is ignored.\n\n**Response:** Returns the created signer with a unique signing URL and token.",
        "summary": "Add a signer to document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createSigner",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create signer request",
                "type": "object",
                "properties": {
                  "contactId": {
                    "description": "ID of the contact to add as a signer",
                    "type": "string",
                    "minLength": 1
                  },
                  "role": {
                    "description": "Signer role (default: SIGNER)",
                    "default": "SIGNER",
                    "type": "string",
                    "enum": [
                      "SIGNER",
                      "ORGANIZER",
                      "REVIEWER",
                      "ACCEPTOR"
                    ]
                  },
                  "signingOrder": {
                    "description": "Signing order for sequential signing (ignored for parallel)",
                    "type": "number",
                    "nullable": true
                  }
                },
                "required": [
                  "contactId",
                  "role"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique signer identifier",
                      "type": "string"
                    },
                    "documentId": {
                      "description": "Document ID this signer belongs to",
                      "type": "string"
                    },
                    "email": {
                      "description": "Signer email address",
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                      "nullable": true
                    },
                    "name": {
                      "description": "Signer full name",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Signer phone number (for SMS notifications)",
                      "type": "string",
                      "nullable": true
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string",
                      "nullable": true
                    },
                    "companyRole": {
                      "description": "Role/title within the company",
                      "type": "string",
                      "nullable": true
                    },
                    "companyOrgNumber": {
                      "description": "Company organization number",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID for this signer",
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "description": "Linked company ID",
                      "type": "string",
                      "nullable": true
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer) - required for BankID signing",
                      "type": "string",
                      "nullable": true
                    },
                    "role": {
                      "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                      "type": "string",
                      "enum": [
                        "SIGNER",
                        "ORGANIZER",
                        "REVIEWER",
                        "ACCEPTOR"
                      ]
                    },
                    "signingOrder": {
                      "description": "Order for sequential signing (null for parallel)",
                      "type": "number",
                      "nullable": true
                    },
                    "token": {
                      "description": "Unique signing token",
                      "type": "string"
                    },
                    "signedAt": {
                      "description": "Date and time when the signer signed (null if not signed)",
                      "type": "string",
                      "nullable": true
                    },
                    "readStatus": {
                      "description": "Read status: NOT_OPENED, OPENED, or READ",
                      "type": "string",
                      "enum": [
                        "NOT_OPENED",
                        "OPENED",
                        "READ"
                      ]
                    },
                    "signingStatus": {
                      "description": "Signing status: NOT_SIGNED, SIGNED, or REJECTED",
                      "type": "string",
                      "enum": [
                        "NOT_SIGNED",
                        "SIGNED",
                        "REJECTED"
                      ]
                    },
                    "signingUrl": {
                      "description": "Complete signing URL for this signer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "role",
                    "token",
                    "signedAt",
                    "readStatus",
                    "signingStatus",
                    "signingUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/signers/{signerId}": {
      "patch": {
        "description": "Update signer information. Most fields can only be updated before the document is sent.\n\n**Updatable Fields:**\n- `name` - Signer's full name\n- `email` - Signer's email address\n- `phone` - Signer's phone number\n- `companyName` - Company name\n- `companyRole` - Role within company\n- `companyOrgNumber` - Company organization number\n- `companyId` - Link to existing company\n- `ssn` - Swedish personal number (for BankID)\n- `role` - Signer role (SIGNER, ORGANIZER, REVIEWER, ACCEPTOR)\n- `signingOrder` - Order for sequential signing\n\n**Restrictions:** Cannot update after signer has signed the document.",
        "summary": "Update a signer",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateSigner",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "companyName": {
                    "type": "string"
                  },
                  "companyRole": {
                    "type": "string"
                  },
                  "companyOrgNumber": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "companyId": {
                    "type": "string"
                  },
                  "ssn": {
                    "type": "string"
                  },
                  "role": {
                    "default": "SIGNER",
                    "type": "string",
                    "enum": [
                      "SIGNER",
                      "ORGANIZER",
                      "REVIEWER",
                      "ACCEPTOR"
                    ]
                  },
                  "signingOrder": {
                    "type": "number",
                    "nullable": true
                  }
                },
                "required": [
                  "role"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique signer identifier",
                      "type": "string"
                    },
                    "documentId": {
                      "description": "Document ID this signer belongs to",
                      "type": "string"
                    },
                    "email": {
                      "description": "Signer email address",
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                      "nullable": true
                    },
                    "name": {
                      "description": "Signer full name",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Signer phone number (for SMS notifications)",
                      "type": "string",
                      "nullable": true
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string",
                      "nullable": true
                    },
                    "companyRole": {
                      "description": "Role/title within the company",
                      "type": "string",
                      "nullable": true
                    },
                    "companyOrgNumber": {
                      "description": "Company organization number",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID for this signer",
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "description": "Linked company ID",
                      "type": "string",
                      "nullable": true
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer) - required for BankID signing",
                      "type": "string",
                      "nullable": true
                    },
                    "role": {
                      "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                      "type": "string",
                      "enum": [
                        "SIGNER",
                        "ORGANIZER",
                        "REVIEWER",
                        "ACCEPTOR"
                      ]
                    },
                    "signingOrder": {
                      "description": "Order for sequential signing (null for parallel)",
                      "type": "number",
                      "nullable": true
                    },
                    "token": {
                      "description": "Unique signing token",
                      "type": "string"
                    },
                    "signedAt": {
                      "description": "Date and time when the signer signed (null if not signed)",
                      "type": "string",
                      "nullable": true
                    },
                    "readStatus": {
                      "description": "Read status: NOT_OPENED, OPENED, or READ",
                      "type": "string",
                      "enum": [
                        "NOT_OPENED",
                        "OPENED",
                        "READ"
                      ]
                    },
                    "signingStatus": {
                      "description": "Signing status: NOT_SIGNED, SIGNED, or REJECTED",
                      "type": "string",
                      "enum": [
                        "NOT_SIGNED",
                        "SIGNED",
                        "REJECTED"
                      ]
                    },
                    "signingUrl": {
                      "description": "Complete signing URL for this signer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "role",
                    "token",
                    "signedAt",
                    "readStatus",
                    "signingStatus",
                    "signingUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a signer from a document. This operation is only allowed for DRAFT documents.\n\n**Note:** Once a document is sent, signers cannot be removed. You must cancel the document first.",
        "summary": "Remove a signer from document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteSigner",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique signer identifier",
                      "type": "string"
                    },
                    "documentId": {
                      "description": "Document ID this signer belongs to",
                      "type": "string"
                    },
                    "email": {
                      "description": "Signer email address",
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
                      "nullable": true
                    },
                    "name": {
                      "description": "Signer full name",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Signer phone number (for SMS notifications)",
                      "type": "string",
                      "nullable": true
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string",
                      "nullable": true
                    },
                    "companyRole": {
                      "description": "Role/title within the company",
                      "type": "string",
                      "nullable": true
                    },
                    "companyOrgNumber": {
                      "description": "Company organization number",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID for this signer",
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "description": "Linked company ID",
                      "type": "string",
                      "nullable": true
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer) - required for BankID signing",
                      "type": "string",
                      "nullable": true
                    },
                    "role": {
                      "description": "Signer role: SIGNER, ORGANIZER, REVIEWER, or ACCEPTOR",
                      "type": "string",
                      "enum": [
                        "SIGNER",
                        "ORGANIZER",
                        "REVIEWER",
                        "ACCEPTOR"
                      ]
                    },
                    "signingOrder": {
                      "description": "Order for sequential signing (null for parallel)",
                      "type": "number",
                      "nullable": true
                    },
                    "token": {
                      "description": "Unique signing token",
                      "type": "string"
                    },
                    "signedAt": {
                      "description": "Date and time when the signer signed (null if not signed)",
                      "type": "string",
                      "nullable": true
                    },
                    "readStatus": {
                      "description": "Read status: NOT_OPENED, OPENED, or READ",
                      "type": "string",
                      "enum": [
                        "NOT_OPENED",
                        "OPENED",
                        "READ"
                      ]
                    },
                    "signingStatus": {
                      "description": "Signing status: NOT_SIGNED, SIGNED, or REJECTED",
                      "type": "string",
                      "enum": [
                        "NOT_SIGNED",
                        "SIGNED",
                        "REJECTED"
                      ]
                    },
                    "signingUrl": {
                      "description": "Complete signing URL for this signer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "role",
                    "token",
                    "signedAt",
                    "readStatus",
                    "signingStatus",
                    "signingUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "500": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contacts": {
      "get": {
        "description": "Retrieve a paginated list of all contacts in your organization.\n\nContacts are individuals that can be added as signers to documents. Each contact can optionally be associated with a company.\n\n**Pagination:** Use 'page' and 'perPage' query parameters.",
        "summary": "List all contacts",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 10,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "operationId": "getContacts",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique contact identifier",
                            "type": "string"
                          },
                          "email": {
                            "description": "Contact email address",
                            "type": "string",
                            "nullable": true
                          },
                          "phone": {
                            "description": "Contact phone number",
                            "type": "string",
                            "nullable": true
                          },
                          "firstName": {
                            "description": "Contact first name",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Contact last name",
                            "type": "string"
                          },
                          "ssn": {
                            "description": "Swedish personal number (personnummer)",
                            "type": "string",
                            "nullable": true
                          },
                          "externalId": {
                            "description": "Your external reference ID",
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "Date and time when contact was created"
                          },
                          "updatedAt": {
                            "description": "Date and time when contact was last updated"
                          },
                          "companyRole": {
                            "description": "Role/title within the associated company",
                            "type": "string",
                            "nullable": true
                          },
                          "company": {
                            "description": "Associated company information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Company ID",
                                "type": "string"
                              },
                              "name": {
                                "description": "Company name",
                                "type": "string",
                                "nullable": true
                              },
                              "orgNumber": {
                                "description": "Company organization number",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "additionalProperties": false,
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "firstName",
                          "lastName",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalPages": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "contacts",
                    "totalPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new contact in your organization.\n\n**Required Fields:**\n- `firstName` - Contact's first name\n- `lastName` - Contact's last name\n\n**Optional Fields:**\n- `email` - Email address\n- `phone` - Phone number (for SMS notifications)\n- `ssn` - Swedish personal number (for BankID)\n- `externalId` - Your external reference ID for tracking\n- `companyId` - Associate with existing company\n- `companyRole` - Role within the company",
        "summary": "Create a new contact",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createContact",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create contact request",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Contact first name (required)",
                    "type": "string",
                    "minLength": 1
                  },
                  "lastName": {
                    "description": "Contact last name (required)",
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "description": "Contact email address",
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "phone": {
                    "description": "Contact phone number",
                    "type": "string"
                  },
                  "ssn": {
                    "description": "Swedish personal number (personnummer)",
                    "type": "string"
                  },
                  "externalId": {
                    "description": "Your external reference ID for this contact",
                    "type": "string"
                  },
                  "companyId": {
                    "description": "ID of company to associate with",
                    "type": "string"
                  },
                  "companyRole": {
                    "description": "Role/title within the company",
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique contact identifier",
                      "type": "string"
                    },
                    "email": {
                      "description": "Contact email address",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Contact phone number",
                      "type": "string",
                      "nullable": true
                    },
                    "firstName": {
                      "description": "Contact first name",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Contact last name",
                      "type": "string"
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer)",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when contact was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when contact was last updated"
                    },
                    "companyRole": {
                      "description": "Role/title within the associated company",
                      "type": "string",
                      "nullable": true
                    },
                    "company": {
                      "description": "Associated company information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Company ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "Company name",
                          "type": "string",
                          "nullable": true
                        },
                        "orgNumber": {
                          "description": "Company organization number",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contacts/search": {
      "get": {
        "description": "Search for contacts by email, phone number, or external ID.\n\n**Query Parameters (at least one required):**\n- `email` - Search by exact email address match\n- `phone` - Search by exact phone number match\n- `externalId` - Search by exact external ID match\n\n**Response:** Returns an array of matching contacts. Empty array if no matches found.\n\n**Note:** All searches are exact matches and scoped to your organization.",
        "summary": "Search contacts",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Search by contact email address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "email",
                  "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                }
              }
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Search by contact phone number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Search by external reference ID (can be passed as string or number)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "searchContacts",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "description": "Array of matching contacts",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique contact identifier",
                            "type": "string"
                          },
                          "email": {
                            "description": "Contact email address",
                            "type": "string",
                            "nullable": true
                          },
                          "phone": {
                            "description": "Contact phone number",
                            "type": "string",
                            "nullable": true
                          },
                          "firstName": {
                            "description": "Contact first name",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Contact last name",
                            "type": "string"
                          },
                          "ssn": {
                            "description": "Swedish personal number (personnummer)",
                            "type": "string",
                            "nullable": true
                          },
                          "externalId": {
                            "description": "Your external reference ID",
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "Date and time when contact was created"
                          },
                          "updatedAt": {
                            "description": "Date and time when contact was last updated"
                          },
                          "companyRole": {
                            "description": "Role/title within the associated company",
                            "type": "string",
                            "nullable": true
                          },
                          "company": {
                            "description": "Associated company information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Company ID",
                                "type": "string"
                              },
                              "name": {
                                "description": "Company name",
                                "type": "string",
                                "nullable": true
                              },
                              "orgNumber": {
                                "description": "Company organization number",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "additionalProperties": false,
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "firstName",
                          "lastName",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "contacts"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contacts/{id}": {
      "get": {
        "description": "Retrieve detailed information about a specific contact including associated company information.",
        "summary": "Get a contact by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getContact",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique contact identifier",
                      "type": "string"
                    },
                    "email": {
                      "description": "Contact email address",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Contact phone number",
                      "type": "string",
                      "nullable": true
                    },
                    "firstName": {
                      "description": "Contact first name",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Contact last name",
                      "type": "string"
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer)",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when contact was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when contact was last updated"
                    },
                    "companyRole": {
                      "description": "Role/title within the associated company",
                      "type": "string",
                      "nullable": true
                    },
                    "company": {
                      "description": "Associated company information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Company ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "Company name",
                          "type": "string",
                          "nullable": true
                        },
                        "orgNumber": {
                          "description": "Company organization number",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update contact information. All fields are optional.\n\n**Note:** Updating a contact does not affect existing document signers. Changes only apply to new documents.",
        "summary": "Update a contact",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateContact",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Update contact request",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "Contact first name",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Contact last name",
                    "type": "string"
                  },
                  "email": {
                    "description": "Contact email address",
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "phone": {
                    "description": "Contact phone number",
                    "type": "string"
                  },
                  "ssn": {
                    "description": "Swedish personal number (personnummer)",
                    "type": "string"
                  },
                  "externalId": {
                    "description": "Your external reference ID for this contact",
                    "type": "string"
                  },
                  "companyId": {
                    "description": "ID of company to associate with",
                    "type": "string"
                  },
                  "companyRole": {
                    "description": "Role/title within the company",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique contact identifier",
                      "type": "string"
                    },
                    "email": {
                      "description": "Contact email address",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Contact phone number",
                      "type": "string",
                      "nullable": true
                    },
                    "firstName": {
                      "description": "Contact first name",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Contact last name",
                      "type": "string"
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer)",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when contact was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when contact was last updated"
                    },
                    "companyRole": {
                      "description": "Role/title within the associated company",
                      "type": "string",
                      "nullable": true
                    },
                    "company": {
                      "description": "Associated company information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Company ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "Company name",
                          "type": "string",
                          "nullable": true
                        },
                        "orgNumber": {
                          "description": "Company organization number",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Soft delete a contact. The contact is marked as deleted but existing document signers remain unaffected.",
        "summary": "Delete a contact",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteContact",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique contact identifier",
                      "type": "string"
                    },
                    "email": {
                      "description": "Contact email address",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Contact phone number",
                      "type": "string",
                      "nullable": true
                    },
                    "firstName": {
                      "description": "Contact first name",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Contact last name",
                      "type": "string"
                    },
                    "ssn": {
                      "description": "Swedish personal number (personnummer)",
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "description": "Your external reference ID",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when contact was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when contact was last updated"
                    },
                    "companyRole": {
                      "description": "Role/title within the associated company",
                      "type": "string",
                      "nullable": true
                    },
                    "company": {
                      "description": "Associated company information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Company ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "Company name",
                          "type": "string",
                          "nullable": true
                        },
                        "orgNumber": {
                          "description": "Company organization number",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies": {
      "get": {
        "description": "Retrieve a list of all companies in your organization.\n\nCompanies can be associated with contacts to track organizational relationships.",
        "summary": "List all companies",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getCompanies",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "companies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "orgNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "companies"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new company in your organization.\n\n**Required Fields:**\n- `name` - Company name\n\n**Optional Fields:**\n- `orgNumber` - Organization number (must be unique if provided)\n- `country` - Country name\n\n**Note:** If a company with the same organization number exists, a 409 Conflict error is returned.",
        "summary": "Create a new company",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createCompany",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "orgNumber": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "orgNumber": {
                      "type": "string",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/search": {
      "get": {
        "description": "Search for companies by organization number or name.\n\n**Query Parameters (at least one required):**\n- `orgNumber` - Search by exact organization number match\n- `name` - Search by exact company name match (case-insensitive)\n\n**Response:** Returns an array of matching companies with their associated contacts. Empty array if no matches found.\n\n**Note:** All searches are exact matches and scoped to your organization.",
        "summary": "Search companies",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgNumber",
            "in": "query",
            "description": "Search by company organization number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search by company name (exact match, case-insensitive)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "searchCompanies",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "companies": {
                      "description": "Array of matching companies",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "orgNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string",
                            "nullable": true
                          },
                          "contacts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique contact identifier",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Contact email address",
                                  "type": "string",
                                  "nullable": true
                                },
                                "phone": {
                                  "description": "Contact phone number",
                                  "type": "string",
                                  "nullable": true
                                },
                                "firstName": {
                                  "description": "Contact first name",
                                  "type": "string"
                                },
                                "lastName": {
                                  "description": "Contact last name",
                                  "type": "string"
                                },
                                "ssn": {
                                  "description": "Swedish personal number (personnummer)",
                                  "type": "string",
                                  "nullable": true
                                },
                                "externalId": {
                                  "description": "Your external reference ID",
                                  "type": "string",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "description": "Date and time when contact was created"
                                },
                                "updatedAt": {
                                  "description": "Date and time when contact was last updated"
                                },
                                "companyRole": {
                                  "description": "Role/title within the associated company",
                                  "type": "string",
                                  "nullable": true
                                },
                                "company": {
                                  "description": "Associated company information",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Company ID",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Company name",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "orgNumber": {
                                      "description": "Company organization number",
                                      "type": "string",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "additionalProperties": false,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "id",
                                "firstName",
                                "lastName",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "companies"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}": {
      "get": {
        "description": "Retrieve detailed information about a company including all associated contacts.",
        "summary": "Get a company by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getCompany",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "orgNumber": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "contacts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique contact identifier",
                                "type": "string"
                              },
                              "email": {
                                "description": "Contact email address",
                                "type": "string",
                                "nullable": true
                              },
                              "phone": {
                                "description": "Contact phone number",
                                "type": "string",
                                "nullable": true
                              },
                              "firstName": {
                                "description": "Contact first name",
                                "type": "string"
                              },
                              "lastName": {
                                "description": "Contact last name",
                                "type": "string"
                              },
                              "ssn": {
                                "description": "Swedish personal number (personnummer)",
                                "type": "string",
                                "nullable": true
                              },
                              "externalId": {
                                "description": "Your external reference ID",
                                "type": "string",
                                "nullable": true
                              },
                              "createdAt": {
                                "description": "Date and time when contact was created"
                              },
                              "updatedAt": {
                                "description": "Date and time when contact was last updated"
                              },
                              "companyRole": {
                                "description": "Role/title within the associated company",
                                "type": "string",
                                "nullable": true
                              },
                              "company": {
                                "description": "Associated company information",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Company ID",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Company name",
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "orgNumber": {
                                    "description": "Company organization number",
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "id"
                                ],
                                "additionalProperties": false,
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "firstName",
                              "lastName",
                              "createdAt",
                              "updatedAt"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/fields": {
      "post": {
        "description": "Add a field/section to a document. Can create single field or multiple fields at once.\n\n**Field Types:**\n- `TEXT` - Rich text content section (Tiptap editor format)\n- `HTML` - Raw HTML content with custom styling (API-only, sanitized for security)\n- `FORM` - Form with input fields for signers\n- `PDF` - PDF file section\n- `PRODUCT_TABLE` - Product/service table with pricing\n\n**Field Position:** Determines the order fields appear in the document (0-based index).\n\n**Field Metadata:** Each field type has specific metadata requirements. See schema documentation for details.\n\n**HTML Field Security:** HTML fields accept raw HTML but are automatically sanitized server-side to allow only safe formatting tags (p, div, span, headings, lists, tables, images) and basic CSS styling. Links, script tags, and dangerous attributes are stripped. Images support HTTP/HTTPS URLs and data URIs for inline images.",
        "summary": "Create a document field",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createField",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "TEXT",
                          "HTML",
                          "FORM",
                          "PDF",
                          "PRODUCT_TABLE",
                          "TABLE"
                        ]
                      },
                      "position": {
                        "type": "number"
                      },
                      "key": {
                        "type": "string",
                        "pattern": "^[a-z0-9_-]*$"
                      },
                      "fieldMeta": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "TEXT"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "HTML"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PDF"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "numPages": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "FORM"
                                ]
                              },
                              "columns": {
                                "type": "number",
                                "minimum": 1
                              },
                              "fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "key": {
                                      "type": "string",
                                      "pattern": "^[a-z0-9_-]*$"
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "input",
                                        "text",
                                        "select",
                                        "datepicker"
                                      ]
                                    },
                                    "row": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "column": {
                                      "type": "number",
                                      "minimum": 0
                                    },
                                    "fieldMeta": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            },
                                            "placeholder": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "input"
                                              ]
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            },
                                            "placeholder": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "text"
                                              ]
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            },
                                            "placeholder": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "select"
                                              ]
                                            },
                                            "options": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "value"
                                                ],
                                                "additionalProperties": false
                                              }
                                            },
                                            "defaultValue": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            },
                                            "placeholder": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "datepicker"
                                              ]
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "row",
                                    "column"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "type",
                              "columns",
                              "fields"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PRODUCT_TABLE"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "enableName": {
                                "type": "boolean"
                              },
                              "columns": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "originalName": {
                                      "type": "string"
                                    },
                                    "enabled": {
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "settings": {
                                      "type": "object",
                                      "properties": {
                                        "decimalPlaces": {
                                          "type": "number"
                                        },
                                        "oneTimePayment": {
                                          "type": "boolean"
                                        },
                                        "pricePrefix": {
                                          "type": "string"
                                        },
                                        "priceSuffix": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "originalName",
                                    "enabled",
                                    "key",
                                    "settings"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "products": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "price": {
                                      "type": "number"
                                    },
                                    "unit": {
                                      "type": "string"
                                    },
                                    "discount": {
                                      "type": "number"
                                    },
                                    "quantity": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "type",
                              "name",
                              "columns",
                              "products"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "TABLE"
                                ]
                              },
                              "columns": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "number"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "type"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "rows": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "cells": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "columnId": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "columnId",
                                          "value"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "cells"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "showHeaders": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "type",
                              "columns",
                              "rows"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "position",
                      "fieldMeta"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "TEXT",
                            "HTML",
                            "FORM",
                            "PDF",
                            "PRODUCT_TABLE",
                            "TABLE"
                          ]
                        },
                        "position": {
                          "type": "number"
                        },
                        "key": {
                          "type": "string",
                          "pattern": "^[a-z0-9_-]*$"
                        },
                        "fieldMeta": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "TEXT"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "HTML"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "PDF"
                                  ]
                                },
                                "value": {
                                  "type": "string"
                                },
                                "numPages": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "FORM"
                                  ]
                                },
                                "columns": {
                                  "type": "number",
                                  "minimum": 1
                                },
                                "fields": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "type": "string",
                                        "pattern": "^[a-z0-9_-]*$"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "input",
                                          "text",
                                          "select",
                                          "datepicker"
                                        ]
                                      },
                                      "row": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "column": {
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "fieldMeta": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string"
                                              },
                                              "placeholder": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "input"
                                                ]
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string"
                                              },
                                              "placeholder": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "text"
                                                ]
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string"
                                              },
                                              "placeholder": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "select"
                                                ]
                                              },
                                              "options": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "additionalProperties": false
                                                }
                                              },
                                              "defaultValue": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string"
                                              },
                                              "placeholder": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "datepicker"
                                                ]
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "row",
                                      "column"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "columns",
                                "fields"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "PRODUCT_TABLE"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "enableName": {
                                  "type": "boolean"
                                },
                                "columns": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "originalName": {
                                        "type": "string"
                                      },
                                      "enabled": {
                                        "type": "boolean"
                                      },
                                      "key": {
                                        "type": "string"
                                      },
                                      "settings": {
                                        "type": "object",
                                        "properties": {
                                          "decimalPlaces": {
                                            "type": "number"
                                          },
                                          "oneTimePayment": {
                                            "type": "boolean"
                                          },
                                          "pricePrefix": {
                                            "type": "string"
                                          },
                                          "priceSuffix": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "originalName",
                                      "enabled",
                                      "key",
                                      "settings"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "products": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "price": {
                                        "type": "number"
                                      },
                                      "unit": {
                                        "type": "string"
                                      },
                                      "discount": {
                                        "type": "number"
                                      },
                                      "quantity": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "name",
                                "columns",
                                "products"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "TABLE"
                                  ]
                                },
                                "columns": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "text",
                                          "number"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "rows": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "cells": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "columnId": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "columnId",
                                            "value"
                                          ],
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "cells"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "showHeaders": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "type",
                                "columns",
                                "rows"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "position",
                        "fieldMeta"
                      ],
                      "additionalProperties": false
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/fields/{fieldId}": {
      "patch": {
        "description": "Update a document field's properties. Only DRAFT documents can have fields updated.\n\n**Field Identifier:**\n- `fieldId` - Can be either database ID or key-based reference (prefix with `key:`)\n- Example: `/api/v1/documents/{docId}/fields/key:recipient-name`\n\n**Updatable Properties:**\n- `type` - Field type (cannot change if field has data)\n- `position` - Field order/position\n- `fieldMeta` - Field-specific metadata\n- `key` - Unique key identifier for API access\n\n**Regular Field Updates (by ID):**\nPass the full field structure including type and complete fieldMeta for that field type.\n\n**Example - Update TEXT field:**\n```json\nPATCH /api/v1/documents/{docId}/fields/{fieldId}\n{\n  \"type\": \"TEXT\",\n  \"fieldMeta\": {\n    \"type\": \"TEXT\",\n    \"content\": \"<p>Updated content</p>\"\n  }\n}\n```\n\n**Example - Update HTML field:**\n```json\nPATCH /api/v1/documents/{docId}/fields/{fieldId}\n{\n  \"type\": \"HTML\",\n  \"fieldMeta\": {\n    \"type\": \"HTML\",\n    \"content\": \"<div style='text-align: center'><h1 style='color: #003366'>Contract Title</h1><img src='https://example.com/logo.png' alt='Company Logo' style='max-width: 200px' /><p>Custom styled content with <span style='color: red'>highlighted text</span></p></div>\"\n  }\n}\n```\n\n**Example - Update FORM field:**\n```json\nPATCH /api/v1/documents/{docId}/fields/{fieldId}\n{\n  \"type\": \"FORM\",\n  \"fieldMeta\": {\n    \"type\": \"FORM\",\n    \"columns\": 2,\n    \"fields\": [...]\n  }\n}\n```\n\n**Key-Based Updates for FORM Subfields:**\nFor FORM fields with subfield keys, use `key:your-field-key` as the fieldId to update a specific subfield by its key.\n\nWhen updating a FORM subfield by key, only pass the `fieldMeta` property with the subfield's metadata structure. All other properties (type, position, key) are ignored.\n\n**Example - Update FORM subfield value:**\n```json\nPATCH /api/v1/documents/{docId}/fields/key:name\n{\n  \"fieldMeta\": {\n    \"type\": \"input\",\n    \"value\": \"Andreas\"\n  }\n}\n```\n\nThis will update only the `value` property of the subfield with key \"name\", preserving all other properties like label, placeholder, and description.",
        "summary": "Update a document field",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateField",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Field type",
                    "type": "string",
                    "enum": [
                      "TEXT",
                      "HTML",
                      "FORM",
                      "PDF",
                      "PRODUCT_TABLE",
                      "TABLE"
                    ]
                  },
                  "position": {
                    "description": "Field position/order",
                    "type": "number"
                  },
                  "key": {
                    "description": "Unique key identifier for API access",
                    "type": "string",
                    "pattern": "^[a-z0-9_-]*$"
                  },
                  "fieldMeta": {
                    "description": "Field-specific metadata. For FORM subfield updates via key: prefix, pass the subfield metadata structure with properties like type and value (e.g., {\"type\": \"input\", \"value\": \"new value\"})."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a field from a document. Only allowed for DRAFT documents.",
        "summary": "Delete a document field",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteField",
        "responses": {
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags": {
      "get": {
        "description": "Retrieve a paginated list of all tags in your organization.\n\nTags help organize and categorize documents, templates, and contacts.\n\n**Pagination:** Use 'page' and 'perPage' query parameters.",
        "summary": "List all tags",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 10,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "operationId": "getTags",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique tag identifier",
                            "type": "string"
                          },
                          "name": {
                            "description": "Tag name",
                            "type": "string"
                          },
                          "color": {
                            "description": "Tag color in hex format (e.g., #FF5733)",
                            "type": "string"
                          },
                          "availableFor": {
                            "description": "Where this tag can be used: DOCUMENT, TEMPLATE, and/or CONTACT",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "description": "Date and time when tag was created"
                          },
                          "updatedAt": {
                            "description": "Date and time when tag was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "color",
                          "availableFor",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalPages": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "tags",
                    "totalPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new tag for organizing documents, templates, or contacts.\n\n**Required Fields:**\n- `name` - Tag name (must be unique)\n- `availableFor` - Where tag can be used: DOCUMENT, TEMPLATE, or CONTACT\n\n**Optional Fields:**\n- `color` - Hex color code (e.g., #FF5733)",
        "summary": "Create a new tag",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createTag",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create tag request",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Tag name (required)",
                    "type": "string",
                    "minLength": 1
                  },
                  "color": {
                    "description": "Tag color in hex format (e.g., #FF5733)",
                    "type": "string",
                    "pattern": "^#[0-9A-F]{6}$"
                  },
                  "availableFor": {
                    "description": "Where this tag can be used",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "TEMPLATE",
                        "CONTACT"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "availableFor"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique tag identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Tag name",
                      "type": "string"
                    },
                    "color": {
                      "description": "Tag color in hex format (e.g., #FF5733)",
                      "type": "string"
                    },
                    "availableFor": {
                      "description": "Where this tag can be used: DOCUMENT, TEMPLATE, and/or CONTACT",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "description": "Date and time when tag was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when tag was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color",
                    "availableFor",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "409": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/{id}": {
      "patch": {
        "description": "Update tag properties. All fields are optional.",
        "summary": "Update a tag",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateTag",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "color": {
                    "type": "string",
                    "pattern": "^#[0-9A-F]{6}$"
                  },
                  "availableFor": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "TEMPLATE",
                        "CONTACT"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique tag identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Tag name",
                      "type": "string"
                    },
                    "color": {
                      "description": "Tag color in hex format (e.g., #FF5733)",
                      "type": "string"
                    },
                    "availableFor": {
                      "description": "Where this tag can be used: DOCUMENT, TEMPLATE, and/or CONTACT",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "description": "Date and time when tag was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when tag was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color",
                    "availableFor",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/tags": {
      "post": {
        "description": "Associate a tag with a document.\n\n**Note:** Tag must be configured for DOCUMENT use (availableFor includes 'DOCUMENT').",
        "summary": "Add tag to document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "addTagToDocument",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "tagId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{id}/tags/{tagId}": {
      "delete": {
        "description": "Remove a tag association from a document.",
        "summary": "Remove tag from document",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "removeTagFromDocument",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/custom-fields": {
      "get": {
        "description": "Retrieve a paginated list of custom field definitions.\n\nCustom fields allow you to add additional structured data to documents or contacts.\n\n**Query Parameters:**\n- `page` - Page number\n- `perPage` - Items per page\n- `type` - Filter by type (DOCUMENT or CONTACT)",
        "summary": "List all custom fields",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 10,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "DOCUMENT",
                    "CONTACT"
                  ]
                }
              }
            }
          }
        ],
        "operationId": "getCustomFields",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique custom field identifier",
                            "type": "string"
                          },
                          "name": {
                            "description": "Custom field name",
                            "type": "string"
                          },
                          "type": {
                            "description": "Field type: DOCUMENT or CONTACT",
                            "type": "string",
                            "enum": [
                              "DOCUMENT",
                              "CONTACT"
                            ]
                          },
                          "inputType": {
                            "description": "Input type: TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                            "type": "string",
                            "enum": [
                              "TEXT",
                              "NUMBER",
                              "DATE",
                              "EMAIL",
                              "PHONE",
                              "URL",
                              "BOOLEAN",
                              "SELECT",
                              "JSON",
                              "TEXTAREA"
                            ]
                          },
                          "defaultValue": {
                            "description": "Default value for this field",
                            "type": "string",
                            "nullable": true
                          },
                          "required": {
                            "description": "Whether this field is required",
                            "type": "boolean"
                          },
                          "options": {
                            "description": "Comma-separated options for SELECT type fields",
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "Date and time when custom field was created"
                          },
                          "updatedAt": {
                            "description": "Date and time when custom field was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "inputType",
                          "defaultValue",
                          "required",
                          "options",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalPages": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "customFields",
                    "totalPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new custom field definition.\n\n**Required Fields:**\n- `name` - Field name\n- `type` - DOCUMENT or CONTACT\n- `inputType` - Input type (TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA)\n\n**Optional Fields:**\n- `defaultValue` - Default value for the field\n- `required` - Whether field is required (default: false)\n- `options` - For SELECT type, comma-separated options",
        "summary": "Create a custom field definition",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createCustomField",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create custom field request",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Custom field name (required)",
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "description": "Field type: DOCUMENT or CONTACT (required)",
                    "type": "string",
                    "enum": [
                      "DOCUMENT",
                      "CONTACT"
                    ]
                  },
                  "inputType": {
                    "description": "Input type (required): TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                    "type": "string",
                    "enum": [
                      "TEXT",
                      "NUMBER",
                      "DATE",
                      "EMAIL",
                      "PHONE",
                      "URL",
                      "BOOLEAN",
                      "SELECT",
                      "JSON",
                      "TEXTAREA"
                    ]
                  },
                  "defaultValue": {
                    "description": "Default value for this field",
                    "type": "string",
                    "nullable": true
                  },
                  "required": {
                    "description": "Whether this field is required (default: false)",
                    "default": false,
                    "type": "boolean"
                  },
                  "options": {
                    "description": "Comma-separated options for SELECT type fields",
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "type",
                  "inputType",
                  "required"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique custom field identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Custom field name",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type: DOCUMENT or CONTACT",
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "CONTACT"
                      ]
                    },
                    "inputType": {
                      "description": "Input type: TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "NUMBER",
                        "DATE",
                        "EMAIL",
                        "PHONE",
                        "URL",
                        "BOOLEAN",
                        "SELECT",
                        "JSON",
                        "TEXTAREA"
                      ]
                    },
                    "defaultValue": {
                      "description": "Default value for this field",
                      "type": "string",
                      "nullable": true
                    },
                    "required": {
                      "description": "Whether this field is required",
                      "type": "boolean"
                    },
                    "options": {
                      "description": "Comma-separated options for SELECT type fields",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when custom field was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when custom field was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "inputType",
                    "defaultValue",
                    "required",
                    "options",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/custom-fields/{id}": {
      "get": {
        "description": "Retrieve detailed information about a custom field definition.",
        "summary": "Get a custom field by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getCustomField",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique custom field identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Custom field name",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type: DOCUMENT or CONTACT",
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "CONTACT"
                      ]
                    },
                    "inputType": {
                      "description": "Input type: TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "NUMBER",
                        "DATE",
                        "EMAIL",
                        "PHONE",
                        "URL",
                        "BOOLEAN",
                        "SELECT",
                        "JSON",
                        "TEXTAREA"
                      ]
                    },
                    "defaultValue": {
                      "description": "Default value for this field",
                      "type": "string",
                      "nullable": true
                    },
                    "required": {
                      "description": "Whether this field is required",
                      "type": "boolean"
                    },
                    "options": {
                      "description": "Comma-separated options for SELECT type fields",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when custom field was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when custom field was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "inputType",
                    "defaultValue",
                    "required",
                    "options",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update custom field properties. All fields are optional.\n\n**Note:** Changing field type may affect existing data.",
        "summary": "Update a custom field definition",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateCustomField",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "inputType": {
                    "type": "string",
                    "enum": [
                      "TEXT",
                      "NUMBER",
                      "DATE",
                      "EMAIL",
                      "PHONE",
                      "URL",
                      "BOOLEAN",
                      "SELECT",
                      "JSON",
                      "TEXTAREA"
                    ]
                  },
                  "defaultValue": {
                    "type": "string",
                    "nullable": true
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "options": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique custom field identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Custom field name",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type: DOCUMENT or CONTACT",
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "CONTACT"
                      ]
                    },
                    "inputType": {
                      "description": "Input type: TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "NUMBER",
                        "DATE",
                        "EMAIL",
                        "PHONE",
                        "URL",
                        "BOOLEAN",
                        "SELECT",
                        "JSON",
                        "TEXTAREA"
                      ]
                    },
                    "defaultValue": {
                      "description": "Default value for this field",
                      "type": "string",
                      "nullable": true
                    },
                    "required": {
                      "description": "Whether this field is required",
                      "type": "boolean"
                    },
                    "options": {
                      "description": "Comma-separated options for SELECT type fields",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when custom field was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when custom field was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "inputType",
                    "defaultValue",
                    "required",
                    "options",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a custom field definition.\n\n**Warning:** This will remove all values associated with this field from all documents/contacts.",
        "summary": "Delete a custom field definition",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteCustomField",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique custom field identifier",
                      "type": "string"
                    },
                    "name": {
                      "description": "Custom field name",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type: DOCUMENT or CONTACT",
                      "type": "string",
                      "enum": [
                        "DOCUMENT",
                        "CONTACT"
                      ]
                    },
                    "inputType": {
                      "description": "Input type: TEXT, NUMBER, DATE, CHECKBOX, SELECT, TEXTAREA, EMAIL, PHONE, or URL",
                      "type": "string",
                      "enum": [
                        "TEXT",
                        "NUMBER",
                        "DATE",
                        "EMAIL",
                        "PHONE",
                        "URL",
                        "BOOLEAN",
                        "SELECT",
                        "JSON",
                        "TEXTAREA"
                      ]
                    },
                    "defaultValue": {
                      "description": "Default value for this field",
                      "type": "string",
                      "nullable": true
                    },
                    "required": {
                      "description": "Whether this field is required",
                      "type": "boolean"
                    },
                    "options": {
                      "description": "Comma-separated options for SELECT type fields",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "Date and time when custom field was created"
                    },
                    "updatedAt": {
                      "description": "Date and time when custom field was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "inputType",
                    "defaultValue",
                    "required",
                    "options",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sajn-id": {
      "get": {
        "description": "Retrieve a paginated list of all sajn ID identity verifications in your organization.\n\nsajn ID enables secure identity verification using Swedish BankID, either with SSN validation or name-based verification.\n\n**Pagination:** Use 'page' and 'perPage' query parameters.\n\n**Filtering:**\n- `status` - Filter by verification status (can specify multiple)\n- `dateFrom` - Filter by creation date from\n- `dateTo` - Filter by creation date to",
        "summary": "List all sajn ID verifications",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (default: 1)",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page (default: 10, max: 100)",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "default": 10,
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status (can specify multiple)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "sajn ID Status:\n- CREATED: Verification created but not sent\n- SENT: Verification sent to recipient\n- OPENED: Recipient opened verification link\n- VERIFIED: Identity successfully verified\n- FAILED: Verification failed\n- EXPIRED: Verification link expired\n- CANCELED: Verification was canceled",
                    "type": "string",
                    "enum": [
                      "CREATED",
                      "SENT",
                      "OPENED",
                      "VERIFIED",
                      "FAILED",
                      "EXPIRED",
                      "CANCELED"
                    ]
                  }
                }
              }
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Filter by creation date from (ISO date string)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Filter by creation date to (ISO date string)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "getSajnIds",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sajnIds": {
                      "description": "Array of sajn ID verifications",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique sajn ID verification identifier",
                            "type": "string"
                          },
                          "organizationId": {
                            "description": "Organization ID",
                            "type": "string"
                          },
                          "fullName": {
                            "description": "Full name of person being verified",
                            "type": "string"
                          },
                          "email": {
                            "description": "Email address (if using EMAIL channel)",
                            "type": "string",
                            "nullable": true
                          },
                          "phone": {
                            "description": "Phone number (if using SMS channel)",
                            "type": "string",
                            "nullable": true
                          },
                          "channel": {
                            "description": "Delivery channel used",
                            "type": "string",
                            "enum": [
                              "EMAIL",
                              "SMS"
                            ]
                          },
                          "status": {
                            "description": "Current verification status",
                            "type": "string",
                            "enum": [
                              "CREATED",
                              "SENT",
                              "OPENED",
                              "VERIFIED",
                              "FAILED",
                              "EXPIRED",
                              "CANCELED"
                            ]
                          },
                          "reference": {
                            "description": "Reference/external ID",
                            "type": "string",
                            "nullable": true
                          },
                          "note": {
                            "description": "Internal note",
                            "type": "string",
                            "nullable": true
                          },
                          "locale": {
                            "description": "Locale for messages",
                            "type": "string"
                          },
                          "tokenExpiresAt": {
                            "description": "When the verification token expires"
                          },
                          "usedAt": {
                            "description": "When the verification was completed",
                            "type": "string",
                            "nullable": true
                          },
                          "failureReason": {
                            "description": "Reason for failure (if status is FAILED)",
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "When the verification was created"
                          },
                          "updatedAt": {
                            "description": "When the verification was last updated"
                          },
                          "contact": {
                            "description": "Linked contact information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "firstName",
                              "lastName"
                            ],
                            "additionalProperties": false,
                            "nullable": true
                          },
                          "createdBy": {
                            "description": "User who created this verification",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "firstName",
                              "lastName",
                              "email"
                            ],
                            "additionalProperties": false,
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "fullName",
                          "channel",
                          "status",
                          "locale",
                          "tokenExpiresAt",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalPages": {
                      "description": "Total number of pages available",
                      "type": "number"
                    }
                  },
                  "required": [
                    "sajnIds",
                    "totalPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new identity verification request. Optionally send it immediately to the recipient.\n\n**Required Fields:**\n- `fullName` - Full name of person to verify (required)\n- `channel` - Delivery channel: EMAIL or SMS (required)\n- Channel-specific: `email` (for EMAIL) or `phone` (for SMS)\n\n**Optional Fields:**\n- `ssn` - Swedish personal number for SSN-based verification (without SSN, name-based verification is used)\n- `reference` - External reference ID for tracking\n- `note` - Internal note about this verification\n- `contactId` - Link to existing contact\n- `locale` - Message locale (default: sv-SE)\n\n**Verification Methods:**\n- **SSN-based**: When `ssn` is provided, BankID verification validates both identity and SSN match\n- **Name-based**: Without `ssn`, BankID verifies identity and name match\n\n**Response:** Returns verification details including token and verification URL (only on creation, never exposed later).\n\n**Billing:** Creating a sajn ID verification counts toward your monthly sajn ID quota and is billed accordingly.",
        "summary": "Create a new sajn ID verification",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "createSajnId",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create sajn ID verification request",
                "type": "object",
                "properties": {
                  "fullName": {
                    "description": "Full name of the person to verify (required)",
                    "type": "string",
                    "minLength": 1
                  },
                  "ssn": {
                    "description": "Swedish personal number (personnummer) for SSN-based verification",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address (required for EMAIL channel)",
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      {
                        "type": "string",
                        "enum": [
                          ""
                        ]
                      }
                    ]
                  },
                  "phone": {
                    "description": "Phone number (required for SMS channel)",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string",
                        "enum": [
                          ""
                        ]
                      }
                    ]
                  },
                  "channel": {
                    "description": "Delivery channel: EMAIL or SMS (required)",
                    "type": "string",
                    "enum": [
                      "EMAIL",
                      "SMS"
                    ]
                  },
                  "reference": {
                    "description": "Optional reference/external ID for tracking",
                    "type": "string"
                  },
                  "note": {
                    "description": "Internal note about this verification",
                    "type": "string"
                  },
                  "contactId": {
                    "description": "Optional contact ID to link this verification to",
                    "type": "string"
                  },
                  "locale": {
                    "description": "Locale for verification messages (default: sv-SE)",
                    "default": "sv-SE",
                    "type": "string"
                  }
                },
                "required": [
                  "fullName",
                  "channel",
                  "locale"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique sajn ID verification identifier",
                      "type": "string"
                    },
                    "organizationId": {
                      "description": "Organization ID",
                      "type": "string"
                    },
                    "fullName": {
                      "description": "Full name of person being verified",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address (if using EMAIL channel)",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Phone number (if using SMS channel)",
                      "type": "string",
                      "nullable": true
                    },
                    "channel": {
                      "description": "Delivery channel used",
                      "type": "string",
                      "enum": [
                        "EMAIL",
                        "SMS"
                      ]
                    },
                    "status": {
                      "description": "Current verification status",
                      "type": "string",
                      "enum": [
                        "CREATED",
                        "SENT",
                        "OPENED",
                        "VERIFIED",
                        "FAILED",
                        "EXPIRED",
                        "CANCELED"
                      ]
                    },
                    "reference": {
                      "description": "Reference/external ID",
                      "type": "string",
                      "nullable": true
                    },
                    "note": {
                      "description": "Internal note",
                      "type": "string",
                      "nullable": true
                    },
                    "locale": {
                      "description": "Locale for messages",
                      "type": "string"
                    },
                    "tokenExpiresAt": {
                      "description": "When the verification token expires"
                    },
                    "usedAt": {
                      "description": "When the verification was completed",
                      "type": "string",
                      "nullable": true
                    },
                    "failureReason": {
                      "description": "Reason for failure (if status is FAILED)",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "When the verification was created"
                    },
                    "updatedAt": {
                      "description": "When the verification was last updated"
                    },
                    "verificationUrl": {
                      "description": "Verification URL (only included when creating)",
                      "type": "string"
                    },
                    "token": {
                      "description": "Verification token (only included when creating, for sending)",
                      "type": "string"
                    },
                    "contact": {
                      "description": "Linked contact information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "firstName",
                        "lastName"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdBy": {
                      "description": "User who created this verification",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "firstName",
                        "lastName",
                        "email"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "audits": {
                      "description": "Audit log entries for this verification",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Audit log entry ID",
                            "type": "string"
                          },
                          "type": {
                            "description": "Event type (e.g., ID_CREATED, ID_SENT, ID_VERIFIED)",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "When this event occurred"
                          },
                          "data": {
                            "description": "Event-specific data",
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "name": {
                            "description": "Name of person who triggered this event",
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "description": "Email of person who triggered this event",
                            "type": "string",
                            "nullable": true
                          },
                          "ipAddress": {
                            "description": "IP address of request",
                            "type": "string",
                            "nullable": true
                          },
                          "userAgent": {
                            "description": "User agent of request",
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "createdAt",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "data": {
                      "description": "Verification data (e.g., BankID response)",
                      "type": "object",
                      "additionalProperties": {},
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "fullName",
                    "channel",
                    "status",
                    "locale",
                    "tokenExpiresAt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sajn-id/{id}": {
      "get": {
        "description": "Retrieve detailed information about a specific sajn ID verification including status, audit logs, and verification data.\n\nThe response includes:\n- Verification status and timestamps\n- Contact information (email/phone based on channel)\n- Linked contact details (if applicable)\n- Complete audit log of all verification events\n- Verification data (e.g., BankID response for verified identities)\n\n**Note:** Sensitive information like SSN is encrypted and not returned in the API response.",
        "summary": "Get a sajn ID verification by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getSajnId",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique sajn ID verification identifier",
                      "type": "string"
                    },
                    "organizationId": {
                      "description": "Organization ID",
                      "type": "string"
                    },
                    "fullName": {
                      "description": "Full name of person being verified",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address (if using EMAIL channel)",
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "description": "Phone number (if using SMS channel)",
                      "type": "string",
                      "nullable": true
                    },
                    "channel": {
                      "description": "Delivery channel used",
                      "type": "string",
                      "enum": [
                        "EMAIL",
                        "SMS"
                      ]
                    },
                    "status": {
                      "description": "Current verification status",
                      "type": "string",
                      "enum": [
                        "CREATED",
                        "SENT",
                        "OPENED",
                        "VERIFIED",
                        "FAILED",
                        "EXPIRED",
                        "CANCELED"
                      ]
                    },
                    "reference": {
                      "description": "Reference/external ID",
                      "type": "string",
                      "nullable": true
                    },
                    "note": {
                      "description": "Internal note",
                      "type": "string",
                      "nullable": true
                    },
                    "locale": {
                      "description": "Locale for messages",
                      "type": "string"
                    },
                    "tokenExpiresAt": {
                      "description": "When the verification token expires"
                    },
                    "usedAt": {
                      "description": "When the verification was completed",
                      "type": "string",
                      "nullable": true
                    },
                    "failureReason": {
                      "description": "Reason for failure (if status is FAILED)",
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "When the verification was created"
                    },
                    "updatedAt": {
                      "description": "When the verification was last updated"
                    },
                    "verificationUrl": {
                      "description": "Verification URL (only included when creating)",
                      "type": "string"
                    },
                    "token": {
                      "description": "Verification token (only included when creating, for sending)",
                      "type": "string"
                    },
                    "contact": {
                      "description": "Linked contact information",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "firstName",
                        "lastName"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "createdBy": {
                      "description": "User who created this verification",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "firstName",
                        "lastName",
                        "email"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "audits": {
                      "description": "Audit log entries for this verification",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Audit log entry ID",
                            "type": "string"
                          },
                          "type": {
                            "description": "Event type (e.g., ID_CREATED, ID_SENT, ID_VERIFIED)",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "When this event occurred"
                          },
                          "data": {
                            "description": "Event-specific data",
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "name": {
                            "description": "Name of person who triggered this event",
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "description": "Email of person who triggered this event",
                            "type": "string",
                            "nullable": true
                          },
                          "ipAddress": {
                            "description": "IP address of request",
                            "type": "string",
                            "nullable": true
                          },
                          "userAgent": {
                            "description": "User agent of request",
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "createdAt",
                          "data"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "data": {
                      "description": "Verification data (e.g., BankID response)",
                      "type": "object",
                      "additionalProperties": {},
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "fullName",
                    "channel",
                    "status",
                    "locale",
                    "tokenExpiresAt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/upload/presigned-url": {
      "post": {
        "description": "Generate a presigned URL for uploading PDF files directly to S3.\n\n**Upload Flow:**\n1. Call this endpoint with the filename to get a presigned URL and S3 key\n2. Upload your PDF file directly to the presigned URL using a PUT request\n3. Use the returned S3 key when creating or updating document fields\n\n**File Requirements:**\n- Only PDF files are accepted (filename must end with .pdf)\n- Files are automatically organized by your organization ID for security\n\n**Response Fields:**\n- `url` - Presigned URL for direct upload to S3 (expires in 1 hour)\n- `key` - S3 key to use in document field metadata\n\n**Example Usage:**\n```\n// 1. Get presigned URL\nPOST /api/v1/documents/upload/presigned-url\n{ \"fileName\": \"contract.pdf\" }\n\n// 2. Upload file directly to S3\nPUT <presigned-url>\nContent-Type: application/pdf\n<file-content>\n\n// 3. Use key in document field\nPATCH /api/v1/documents/:id/fields/:fieldId\n{ \"fieldMeta\": { \"type\": \"PDF\", \"value\": \"<s3-key>\", \"numPages\": -1 } }\n```\n\n**Security:** Files are organized by organization ID and isolated from other organizations' data.",
        "summary": "Get presigned URL for file upload",
        "tags": [],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token for API authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getPresignedUploadUrl",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "description": "Request for getting presigned upload URL",
                "type": "object",
                "properties": {
                  "fileName": {
                    "description": "Name of the file to upload (must be a PDF file)",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "fileName"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Presigned upload URL response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Presigned upload URL response",
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Presigned URL for uploading the file directly to S3",
                      "type": "string",
                      "format": "uri"
                    },
                    "key": {
                      "description": "S3 key for the uploaded file (use this in document fields)",
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "key"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Error response",
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message describing what went wrong",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "sajn API",
    "version": "1.0.0",
    "description": "# sajn Digital Signing API\n\nWelcome to the sajn API documentation. This RESTful API allows you to integrate digital document signing capabilities into your applications.\n\n## Overview\n\nsajn is a Swedish digital document signing platform that enables you to:\n- Create and manage digital documents\n- Add signers and participants to documents\n- Send documents for signing via email or SMS\n- Track document status and signatures\n- Manage contacts and companies\n- Organize documents with tags and custom fields\n- Perform identity verification with sajn ID (BankID integration)\n\n## Authentication\n\nAll API requests require authentication using an API key. Include your API key in the Authorization header:\n\n```\nAuthorization: Bearer YOUR_API_KEY\n```\n\nYou can generate API keys from your organization settings in the sajn dashboard.\n\n## Rate Limiting\n\nAPI requests are rate limited to ensure service stability:\n- 100 requests per minute per API key\n- 1000 requests per hour per API key\n\nRate limit headers are included in all responses.\n\n## Pagination\n\nList endpoints support pagination with the following query parameters:\n- `page` - Page number (default: 1)\n- `perPage` - Items per page (default: 10, max: 100)\n\n## Webhooks\n\nConfigure webhooks to receive real-time notifications about document events:\n- `DOCUMENT_CREATED` - When a document is created\n- `DOCUMENT_SENT` - When a document is sent for signing\n- `DOCUMENT_OPENED` - When a signer opens a document\n- `DOCUMENT_SIGNED` - When a signer signs a document\n- `DOCUMENT_COMPLETED` - When all signers have signed\n- `DOCUMENT_REJECTED` - When a signer rejects a document\n\n## Error Handling\n\nThe API uses standard HTTP status codes and returns error details in JSON format:\n\n```json\n{\n  \"message\": \"Error description\"\n}\n```\n\nCommon status codes:\n- 200: Success\n- 400: Bad Request - Invalid parameters\n- 401: Unauthorized - Invalid or missing API key\n- 404: Not Found - Resource doesn't exist\n- 409: Conflict - Resource already exists\n- 500: Internal Server Error\n\n## Support\n\nFor API support, documentation, or questions:\n- Email: support@sajn.se\n- Documentation: https://docs.sajn.se\n- Status: https://status.sajn.se",
    "contact": {
      "name": "sajn Support",
      "email": "hej@sajn.se",
      "url": "https://sajn.se/support"
    },
    "license": {
      "name": "Policy",
      "url": "https://sajn.se/allmanna-villkor"
    }
  },
  "servers": [
    {
      "url": "https://app.sajn.se",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "API health and version information"
    },
    {
      "name": "Documents",
      "description": "Create, manage, and send documents for signing"
    },
    {
      "name": "Signers",
      "description": "Manage document signers and participants"
    },
    {
      "name": "Contacts",
      "description": "Manage contacts and contact information"
    },
    {
      "name": "Companies",
      "description": "Manage companies and organizations"
    },
    {
      "name": "Fields",
      "description": "Manage document fields and sections"
    },
    {
      "name": "Tags",
      "description": "Organize documents with tags"
    },
    {
      "name": "Custom Fields",
      "description": "Define and manage custom fields for documents"
    },
    {
      "name": "sajn ID",
      "description": "Identity verification with Swedish BankID"
    }
  ]
}